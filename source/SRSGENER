*PROCESS FLAG(PAGE0)                                               V121
SRSGENER TITLE '- SRS Copy Routine'
SRSGENER CSECT , ATTR=NONE
SRSGENER AMODE 31
SRSGENER RMODE 24
*=====================================================================*
*                                                                     *
*  MODULE NAME:  SRSGENER                                             *
*                                                                     *
*  OPERATION:                                                         *
*                                                                     *
*    SRSGENER is an SRS despooler routine provided to perform      V120
*    IEBGENER-like functions for the SRSTASK routine.  The program    *
*    receives spool record images, and simply writes the images    V120
*    to the data set specified in the OUTFILE= parameter.          V120
*                                                                     *
*    The following options can be specified via the PPARM= SRS     V120
*    option:                                                       V120
*                                                                  V120
*    OUTFILE=<ddname>                                              V120
*    Specifies the DDNAME of the data set to write spool data      V120
*    records to.  The default is SYSUT2.                           V120
*                                                                  V120
*    DEFER_OPEN=YES/NO                                             V120
*    Specifies whether the OUTFILE= file should be opened at SRS   V120
*    initialization or after the first record is despooled.  If    V120
*    'YES' (which is the default) is specified and the OUTFILE=    V120
*    file is a new data set that does not specify LRECL            V120
*    information, SRS will use the record length of the first      V120
*    record despooled as the LRECL.  If 'NO', LRECL must be        V120
*    specified on the OUTFILE= file or a S013-34 abend will        V120
*    occur.  'NO' may be useful if OUTFILE= specifies a tape       V120
*    device and SRS ends with RC=4 (indicating no spool files      V120
*    matched the selection criteria) before the tape is mounted.   V120
*                                                                  V120
*    NOTES:                                                        V120
*                                                                  V120
*    This routine is loaded and branch-entered by SRSTASK at       V120
*    various times.  When invoked, R1 points to the SRS Data Block V120
*    (mapped by SRSDATA).  A flag in SRSDATA indicates the calling V120
*    reason:                                                       V120
*                                                                  V120
*    o Task initialization  (SRSFLAGS=SRSINIT)                     V120
*    o Task termination     (SRSFLAGS=SRSTERM)                     V120
*    o New dataset call     (SRSFLAGS=SRSFIRST)                    V120
*    o Data record call     (SRSFLAGS=SRSDREC)                     V120
*    o End-of-dataset call  (SRSFLAGS=SRSEOF)                      V120
*                                                                  V120
*    A fullword (SRSUSER) is avaiable for the program's use and    V120
*    will be preserved across calls.                               V120
*                                                                  V120
*    ATTRIBUTES:                                                      *
*                                                                     *
*      LOCATION:  Resident in own address space                       *
*      STATE:  Problem, not APF authorized                            *
*      AMODE:  31-BIT                                                 *
*      RMODE:  24-BIT (Uses Access Methods)                           *
*      KEY:   8                                                       *
*      MODE:  Task                                                    *
*      SERIALIZATION: None                                            *
*      TYPE:  Not reentrant                                           *
*                                                                     *
*  Written By: Dave Danner                                      @A11202
*              Summit Technical Services, Inc.                  @A11202
*                                                               @A11202
*          April, 1998 (Copied from PSOGENER in PSOS)                 *
*                                                                     *
*  Change log:                                                        *
*    DWD 04/98: Set LRECL for SYSUT2 if not in JCL                 V111
*    DWD 09/03: Support for OUTFILE= option                        V120
*               Support for DEFER_OPEN=YES/NO                      V120
*=====================================================================*
SRSGENER SRSBEGIN LEVEL=BASE                                       V130
         BAKR  R14,0                Save environment
         LR    R12,R15              Set base register
         USING SRSGENER,R12
*
         LR    R8,R1                Copy SRS data block address    V120
         USING SRSDATA,R8                                          V120
         L     R9,SRSUSER           Get work area address
         USING GENRWORK,R9          Address work area
         SPACE 3
*=====================================================================*
* Check calling code indicator                                        *
*=====================================================================*
         TM    SRSFLAGS,SRSINIT     Initialization call ?
         BNO   NOINIT               No, continue
*=====================================================================*
* SRSGENER initialization call                                        *
*=====================================================================*
         BAL   R10,CKPARM           Check PPARM= parameters        V120
         LTR   R15,R15              Parameters OK ?                V120
         BNZ   RETURN               No, quit now                   V120
         LA    R15,SYSUT2           Get output file DCB address    V120
         MVC   DCBDDNAM-IHADCB(8,R15),GENRDDNM Set outfile DDNAME  V120
         RDJFCB SYSUT2              Read JFCB of SYSUT2            V111
         LTR   R15,R15              SYSUT2 DD stmt provided ?      V111
         BNZ   NOSYSUT2             No, quit now                   V111
         TM    GENRSTAT,GENRDOPN    Deferred OPEN ?                V120
         BO    SKIPOPEN             Yes, wait for data record      V120
         BAL   R10,OPENOUT          Open the output file           V120
SKIPOPEN DS    0H                                                  V120
         MVC   WTOBUFF+2(L'SRSG01I),SRSG01I  Move info message     V120
         MVC   WTOBUFF+39(8),GENRDDNM                   Move ddnameV120
         LA    R15,WTOBUFF+39       Point at 1st char in ddname    V121
DDNLOOP  DS    0H                                                  V121
         LA    R15,1(R15)           Bump pointer                   V121
         CLI   0(R15),C' '          End of ddname ?                V121
         BNE   DDNLOOP              No, check next char            V121
         MVC   1(4,R15),=C'DSN='    Move next part of msg          V121
         LA    R15,5(R15)           Point at spot for DSN          V121
         MVC   0(L'JFCBDSNM,R15),JFCBDSNM Move dsn to msg          V121
         LA    R15,L'JFCBDSNM(R15)  Point past end of DSN          V121
         LA    R1,WTOBUFF+2         Get start of message           V121
         SR    R15,R1               Calculate length               V121
         STH   R15,WTOBUFF          Save length in WTO             V120
         WTO   TEXT=WTOBUFF         Issue message                  V120
         B     RETURN0              Return
         SPACE 3
NOINIT   DS    0H
         TM    SRSFLAGS,SRSDREC     Data record call ?
         BNO   NOREC                No, continue
*=====================================================================*
* SRSGENER data record call                                           *
*=====================================================================*
         TM    GENRSTAT,GENROPEN    Is SYSUT2 dataset open ?       V111
         BO    GETREC               Yes, skip OPEN                 V111
         CLC   JFCLRECL,=AL2(0)     LRECL specified by user ?      V111
         BNE   U2OPEN               Yes, use it                    V111
         TM    JFCBIND2,JFCNEW      DISP=NEW ?                     V111
         BO    LRECSET              Yes, copy LRECL from input     V111
         TM    JFCBTSDM,JFCSDS      SYSOUT dataset ?               V111
         BNO   U2OPEN               No, use existing dataset       V111
*==================================================================V111
* Copy the LRECL of the first dataset to SYSUT2 LRECL.             V111
* Set the RECFM to fixed, blocked.                                 V111
* Set the BLKSIZE to zero, to use system determined blocksize.     V111
*==================================================================V111
LRECSET  DS    0H                                                  V111
         LA    R3,SYSUT2            Get SYSUT2 DCB address         V111
         MVC   DCBLRECL-IHADCB(L'DCBLRECL,R3),SRSRECL  Set LRECL   V111
         MVI   DCBRECFM-IHADCB(R3),DCBRECF+DCBRECBR    RECFM=FB    V111
         XC    DCBBLKSI-IHADCB(L'DCBBLKSI,R3),DCBBLKSI-IHADCB(R3)  V111
U2OPEN   DS    0H                                                  V111
         BAL   R10,OPENOUT          Open the output file           V120
GETREC   DS    0H                                                  V112
* Check lengths, copy record to output buffer if necessary
         L     R6,SRSREC            Get address of record
         LH    R7,SRSRECL           Get length of record
         CH    R7,GENRRECL          Record length vs. buffer length
         BE    DOPUT                Equal, do PUT now
         BH    LOWLRECL             Higher, issue warning
*                                   Lower, move record into buffer
         TM    GENRSTAT,GENRFREC    First record in data set?      V120
         BZ    SKIPCLR              No, skip clearing buffer       V120
         LA    R2,GENRRBUF          Get address of buffer          V120
         LH    R3,GENRRECL          Get length of buffer           V120
         L     R15,=A(X'40000000')  Set blank pad & zero length    V120
         MVCL  R2,R14               Set buffer to blanks           V120
SKIPCLR  DS    0H                                                  V120
         LA    R2,GENRRBUF          Get address of buffer
         LR    R3,R7                Get length of record
         MVCL  R2,R6                Move record to buffer
         LA    R6,GENRRBUF          Point at buffer
         B     DOPUT                Go write record
LOWLRECL DS    0H
         TM    GENRSTAT,GENRFREC    First record in data set?      V120
         BZ    DOPUT                No, message already issued     V120
         WTO   'SRSG02W WARNING - Input record length greater than outp+
               ut file LRECL - Data truncated'                     V120
DOPUT    DS    0H
* Write record to output buffer
         PUT   SYSUT2,(6)           Write out record
         NI    GENRSTAT,X'FF'-GENRFREC  Reset first-record flag    V120
         B     RETURN0
         SPACE 3
NOREC    DS    0H
         TM    SRSFLAGS,SRSFIRST    Processing new dataset ?       V120
         BNO   NOFIRST              No, continue                   V120
*==================================================================V120
* SRSGENER New Data set call                                       V120
*==================================================================V120
         OI    GENRSTAT,GENRFREC    Set first record flag          V120
         B     RETURN0              Return                         V120
         SPACE 3                                                   V120
NOFIRST  DS    0H                                                  V120
         TM    SRSFLAGS,SRSTERM     Termination call ?
         BNO   NOTERM               No, continue
*=====================================================================*
* SRSGENER termination call                                           *
*=====================================================================*
         TM    GENRSTAT,GENROPEN    Is OUTFILE data set open?      V120
         BZ    SKIPCLOS             No, don't CLOSE it             V120
         CLOSE SYSUT2               Close output dataset
SKIPCLOS DS    0H                                                  V120
         LTR   R9,R9                Did we get a work area ?
         BZ    RETURN0              No, nothing to free
         LH    R2,GENRGETL          Get length of GETMAINed area
         FREEMAIN R,A=(9),LV=(2)    Free the work area
         B     RETURN0              Return
         SPACE 3                                                   V120
NOTERM   DS    0H                                                  V120
         B     RETURN0              Not interested in this call    V120
         SPACE 3
*=====================================================================*
* SRSGENER error handling                                             *
*=====================================================================*
NOSYSUT2 DS    0H                                                  V111
         MVC   WTOBUFF+2(L'SRSG10E),SRSG10E  Move error message    V120
         MVC   WTOBUFF+18(8),GENRDDNM        Move ddname           V120
         LA    R15,L'SRSG10E       Get length of whole msg         V120
         STH   R15,WTOBUFF         Save length in WTO              V120
         WTO   TEXT=WTOBUFF        Issue message                   V120
         LA    R15,8               Set RC=8, terminate
         B     RETURN              Return
         SPACE 3
RETURN0  DS    0H
         SLR   R15,R15             SET RC=0
RETURN   DS    0H
         PR                         Return to caller
         EJECT
*==================================================================V120
* This routine opens the output file and acquires a buffer         V120
* which might be needed to write the data records.                 V120
*==================================================================V120
OPENOUT  DS    0H                                                  V120
         OPEN  (SYSUT2,OUTPUT)      Open output dataset            V120
         OI    GENRSTAT,GENROPEN    Flag SYSUT2 open               V120
         LA    R3,SYSUT2            Get SYSUT2 DCB address         V120
         LH    R3,DCBLRECL-IHADCB(,R3)  Get required buffer size   V120
         LA    R2,GENRWRKL(R3)      Get required work area length  V120
         GETMAIN R,LV=(2),LOC=BELOW Get a work area                V120
         ST    R1,SRSUSER           Save addr in anchor block      V120
         LR    R9,R1                Update work area pointer       V120
         STH   R3,GENRRECL          Save length of buffer (LRECL)  V120
         STH   R2,GENRGETL          Save length of GETMAINed area  V120
         BR    R10                  Return                         V120
         EJECT                                                     V120
*==================================================================V120
* This routine processes the PPARM= options.                       V120
*==================================================================V120
CKPARM   DS    0H                                                  V120
         SLR   R15,R15             Clear work reg                  V120
         IC    R15,SRSPARML        Get length of parms             V120
         LTR   R15,R15             Any parms ?                     V120
         BZ    CKPARMX             No, quit now                    V120
         LA    R2,SRSPARM          Point at first char in parm     V120
         LA    R7,0(R15,R2)        Point one past end of parm      V120
         BCTR  R7,0                Point at last char in parm      V120
         SLR   R15,R15             Set CKPARM RC=0                 V120
CHECKOP  DS    0H                                                  V120
         CR    R2,R7               Any more operands ?             V120
         BH    CKPARMX             No, done with parse             V120
* Find the last character in the operand                           V120
         LA    R3,1(R2)            Point at next character         V120
         CLI   0(R2),C','          Null operand ?                  V120
         BNE   FINDEND             No, process it                  V120
         LR    R2,R3               Point at next character         V120
         B     CHECKOP             And check it out                V120
FINDEND  DS    0H                                                  V120
         CR    R3,R7               End of operand ?                V120
         BH    GOTEND              Yes, good                       V120
         CLI   0(R3),C','          End of operand ?                V120
         BE    GOTEND              Yes, good                       V120
         LA    R3,1(R3)            Point at next char              V120
         B     FINDEND             And check it                    V120
GOTEND   DS    0H                                                  V120
         BCTR  R3,0                Point at last character in op   V120
         LR    R4,R3               Copy to work reg                V120
* R2 now points at the operand, and R3 points at the last char     V120
         ST    R2,PARSOPST         Save start of operand           V120
         ST    R3,PARSOPEN         Save end of operand             V120
         CLC   =C'OUTFILE=',0(R2)  Check keyword                   V120
         BNE   NOOUTF              If not matched, check next      V120
* Process the OUTFILE= keyword                                     V120
         LA    R2,8(R2)            Point at keyword value          V120
         SR    R4,R2               Get length of value             V120
         BM    NEXTOP              Branch if null                  V120
         CH    R4,=Y(L'GENRDDNM-1) Check max length                V120
         BH    PARSERR             Error if too large              V120
         MVC   GENRDDNM,BLANKS     Init outfile DDNAME             V120
         LA    R1,GENRDDNM         Point at target field           V120
         EX    R4,MVCPARM          Save program name               V120
         B     NEXTOP              Check next operand              V120
*                                                                  V120
NOOUTF   DS    0H                                                  V120
         CLC   =C'DEFER_OPEN=',0(R2) Check keyword                 V120
         BNE   NODEFOPN            If not matched, check next      V120
* Process the DEFER_OPEN= keyword                                  V120
         LA    R2,11(R2)           Point at keyword value          V120
         SR    R4,R2               Get length of value             V120
         BM    NEXTOP              Branch if null                  V120
         CH    R4,=H'1'            Is length 2 ?                   V120
         BNE   CKDFOY              No, check for 'YES'             V120
         CLC   =C'NO',0(R2)        'NO' option ?                   V120
         BNE   PARSERR             No, parm error                  V120
         NI    GENRSTAT,X'FF'-GENRDOPN   Set DEFER_OPEN=NO         V120
         B     NEXTOP              Check next operand              V120
CKDFOY   DS    0H                                                  V120
         CH    R4,=H'2'            Is length 3 ?                   V120
         BNE   PARSERR             No, bad parm                    V120
         CLC   =C'YES',0(R2)       'YES' option ?                  V120
         BNE   PARSERR             No, bad parm                    V120
         OI    GENRSTAT,GENRDOPN   Set DEFER_OPEN=YES              V120
         B     NEXTOP              Check next operand              V120
*                                                                  V120
NODEFOPN DS    0H                                                  V120
         B     PARSERR             No more valid operands          V120
         SPACE 3                                                   V120
NEXTOP   DS    0H                                                  V120
         LA    R2,2(R3)            Point at next operand           V120
         B     CHECKOP             Check next operand              V120
         SPACE 3                                                   V120
* Syntax error in paramaters specified                             V120
PARSERR  DS    0H                                                  V120
         MVC   WTOBUFF+2(L'SRSG20E),SRSG20E                        V120
         LA    R15,L'SRSG20E       Get length of message           V120
         STH   R15,WTOBUFF         Save length in WTO              V120
         LA    R1,WTOBUFF+32       Point at target for bad op      V120
         L     R2,PARSOPST         Restore pointer to operand      V120
         L     R4,PARSOPEN         Restore pointer to end of op    V120
         SR    R4,R2               Get length                      V120
         CH    R4,=H'19'           Bad op greater than 20 bytes ?  V120
         BNH   BADOPOK             No, use its real length         V120
         LA    R4,19               Just show first 20 bytes        V120
BADOPOK  DS    0H                                                  V120
         EX    R4,MVCPARM          Move bad op into message        V120
         WTO   TEXT=WTOBUFF        Issue message                   V120
         LA    R15,8               Set parse RC=8                  V120
CKPARMX  DS    0H                                                  V120
         BR    R10                 Return to main routine          V120
         SPACE 3                                                   V120
MVCPARM  MVC   0(*-*,R1),0(R2)     Generic executed MVC            V120
         EJECT                                                     V120
JFCBX    DS    0F
         DC    XL1'87',AL3(JFCBAREA)
JFCBAREA DS    0F
         IEFJFCBN LIST=YES
PARSOPST DS    F                                                   V120
PARSOPEN DS    F                                                   V120
GENRDDNM DC    CL8'SYSUT2'          DDNAME of output file          V120
GENRSTAT DC    AL1(GENRDOPN)  Set default options                  V120
GENRFREC EQU   B'10000000'  Processing first record of spool DS    V120
GENROPEN EQU   B'01000000'  SYSUT2 dataset is open                 V111
GENRDOPN EQU   B'00100000'  Deferred OPEN is in effect             V120
GENRSTA4 EQU   B'00010000'  Reserved for future use                V120
GENRSTA5 EQU   B'00001000'  Reserved for future use                V120
GENRSTA6 EQU   B'00000100'  Reserved for future use                V120
GENRSTA7 EQU   B'00000010'  Reserved for future use                V120
GENRSTA8 EQU   B'00000001'  Reserved for future use                V120
*                                                                  V120
SRSG01I  DC    C'SRSG01I Writing spool data to DDNAME=xxxxxxxx '   V121
SRSG10E  DC    C'SRSG10E ERROR - xxxxxxxx DD statement missing'    V120
SRSG20E  DC    C'SRSG20E Input PPARM= invalid:                        '+
                                                                   V120
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM),EXLST=JFCBX       V111
BLANKS   DC    CL20' '                                             V120
WTOBUFF  DS    CL120                                               V121
GENRWORK DSECT
GENRRECL DS    H       Length of buffer (SYSUT2 LRECL)
GENRGETL DS    H       Length of GETMAINed area
GENRRBUF DS    0F      Output buffer
GENRWRKL EQU   *-GENRWORK
* MAPPING MACROS
         SRSDATA
         DCBD DSORG=PS             MAP DCB
         YREGS
         END
